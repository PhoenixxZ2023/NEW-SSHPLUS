#!/bin/bash
clear
# Instalação silenciosa de pacotes
sudo apt-get install lolcat -y &>/dev/null 2>&1
sudo apt-get install iproute2 -y &>/dev/null 2>&1
sudo apt-get install toilet -y &>/dev/null 2>&1
sudo apt-get install curl -y &>/dev/null 2>&1
sudo apt-get install git -y &>/dev/null 2>&1 
sudo apt-get install figlet boxes -y &>/dev/null 2>&1 
sudo apt-get install net-tools -y &>/dev/null 2>&1
sudo apt-get install procps -y >/dev/null 2>&1
sudo apt-get install sysstat -y >/dev/null 2>&1

# Verificação se o usuário é root
cd $HOME
if [[ "$(whoami)" != "root" ]]; then
    echo -e "\033[1;33m[\033[1;31mErro\033[1;33m] \033[1;37m- \033[1;33mVOCÊ PRECISA EXECUTAR A INSTALAÇÃO DO SCRIPT COMO USUÁRIO ROOT\033[0m"
    rm $HOME/Plus >/dev/null 2>&1
    exit 1  # Usar exit 1 para indicar erro
fi

# Função barra de progresso
fun_bar() {
    comando[0]="$1"
    comando[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${comando[0]} -y >/dev/null 2>&1
        ${comando[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne    "\033[1;31m   ❪\033[1;33mAGUARDE \033[5;37m>\033[5;37m>\033[5;37m>\033[5;37m> \033[1;93m["
    while true; do
        for ((i = 0; i < 18; i++)); do
            echo -ne "\033[1;92m■"
            sleep 0.1s
        done
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        echo -e "\033[1;93m]"
        sleep 1s
        tput cuu1
        tput dl1
        echo -ne "\033[1;31m   ❪\033[1;33mAGUARDE \033[5;37m>\033[5;37m>\033[5;37m>\033[5;37m> \033[1;93m["
    done
    echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}

# Redefinir a exibição do terminal
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃\E[41;1;37m               ⇱ SCRIPT SSHPLUS PRO ⇲             \E[0m\033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"  
echo -e "\033[0;34m┃           \033[1;31mATENCAO! \033[1;37mESSE SCRIPT IRA !             \033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;32m• \033[1;37mINSTALAR UM CONJUNTO DE SCRIPTS COMO FERRAMENTAS\033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m  PARA O GERENCIAMENTO DE REDE, SISTEMA E USUARIOS\033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;32m• \033[1;32mDICA! \033[1;37mULTILIZE O TEMA DARK EM SEU TERMINAL PARA \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m  UMA MELHOR EXPERIÊNCIA E VISUALIZACAO DO MESMO! \033[0;34m┃"
echo -e "\033[0;34m┃                                                  \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37m               by:@TURBONET2023                   \E[0m\033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"           
echo ""
#-----------------------------------------------------------------------------------------------------------------
 wget -O /root/install https://raw.githubusercontent.com/PhoenixxZ2023/NEW-SSHPLUS/refs/heads/main/script/install > /dev/null 2>&1
    chmod +x /root/install >/dev/null 2>&1
    /root/install >/dev/null 2>&1
    sleep 3s
    echo "/bin/menu" >/bin/h && chmod +x /bin/h >/dev/null 2>&1
    rm versao* >/dev/null 2>&1
    wget https://raw.githubusercontent.com/PhoenixxZ2023/NEW-SSHPLUS/main/Install/versao >/dev/null 2>&1
    rm v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/PhoenixxZ2023/NEW-SSHPLUS/main/Modulos/v2raymanager >/dev/null 2>&1
    wget https://raw.githubusercontent.com/PhoenixxZ2023/NEW-SSHPLUS/main/Modulos/botteste.sh >/dev/null 2>&1
    chmod 777 v2raymanager >/dev/null 2>&1
    chmod 777 botteste.sh >/dev/null 2>&1
    mkdir $HOME/BOT >/dev/null 2>&1
    cd $HOME/BOT
    wget https://raw.githubusercontent.com/PhoenixxZ2023/NEW-SSHPLUS/main/Modulos/ShellBot.sh >/dev/null 2>&1
    chmod 777 ShellBot.sh >/dev/null 2>&1
    cd >/dev/null 2>&1
    chmod 777 licence >/dev/null 2>&1
    mkdir /etc/rec >/dev/null 2>&1
    cd /etc/rec
    wget https://raw.githubusercontent.com/PhoenixxZ2023/NEW-SSHPLUS/main/Modulos/licence >/dev/null 2>&1
    chmod 777 licence >/dev/null 2>&1
    cd >/dev/null 2>&1
#-----------------------------------------------------------------------------------------------------------------
echo ""
[[ -f "$HOME/usuarios.db" ]] && {
tput reset
echo -e "\033[0;34m┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓\033[0m"
echo -e "\033[0;34m┃                   \033[1;37m• \033[1;31mATENCAO \033[1;37m•                   \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37mUMA BASE DE DADOS DE USUÁRIO \033[1;32m(usuarios.db) \033[1;37mFoi   \033[0;34m┃" 
echo -e "\033[0;34m┃\033[1;37mENCONTRADA! DESEJA MANTE-LA PRESERVANDO O LIMITE \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37mDE CONEXÕES SIMULTÂNEAS DE USUARIOS? OU DESEJA   \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37mCRIAR UMA NOVA BASE ?                            \033[0;34m┃"
echo -e "\033[0;34m┠━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┨\033[0m"
echo -e "\033[0;34m┃\033[1;37m[\033[1;31m1\033[1;37m] \033[1;37mMANTER BASE DE DADOS ATUAIS                  \033[0;34m┃"
echo -e "\033[0;34m┃\033[1;37m[\033[1;31m2\033[1;37m] \033[1;37mCRIAR UMA NOVA BASE DE DADOS                 \033[0;34m┃"
echo -e "\033[0;34m┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛\033[0m"
echo ""
tput setaf 2 ; tput bold ; read -p "Opção ?: " -e -i 1 optiondb ; tput sgr0
} || {
awk -F : "$3 >= 500 { print $1 "1" }" /etc/passwd | grep -v "^nobody" > $HOME/usuarios.db
}
[[ "$optiondb" = "2" ]] && awk -F : "$3 >= 500 { print $1 " 1" }" /etc/passwd | grep -v "^nobody" > $HOME/usuarios.db

# Redefinir a exibição do terminal
tput reset
## Exibir mensagem de espera com fundo azul e texto branco em negrito
echo -e "\E[38;5;36m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;36m┃\E[44;1;37m            AGUARDE A INSTALAÇÃO               \E[0m\E[38;5;36m┃"
echo -e "\E[38;5;36m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️ \033[1;37m] \033[1;97mATUALIZANDO SISTEMA \033[1;37m[\033[1;31m⚠️ \033[1;91m]\033[0m"
echo ""
echo -e "  \033[1;93mATUALIZAÇÕES COSTUMAM DEMORAR UM POUCO!\033[0m"
echo ""

# Definir a função de atualização do sistema
fun_attlist() {
    # Criar diretório oculto, se não existir
    if [[ ! -d /usr/share/.plus ]]; then
        mkdir /usr/share/.plus
    fi

    # Registrar a data da atualização
    echo "crz: $(date)" > /usr/share/.plus/.plus
}

# Executar a função de atualização do sistema com barra de progresso
fun_bar "fun_attlist"

# Redefinir a exibição do terminal
tput reset
# Exibir mensagem de espera com fundo azul e texto branco em negrito
echo -e "\E[38;5;18m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;18m┃\E[44;1;37m            AGUARDE A INSTALAÇÃO               \E[0m\E[38;5;18m┃"
echo -e "\E[38;5;18m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[1;97mINSTALANDO PYTHON \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[0m"
echo ""
echo -e "        \033[1;93mCOSTUMA DEMORAR UM POUCO!\033[0m"
echo ""
# Função para instalar Python3 baseado na versão do sistema
install_python3() {
    . /etc/os-release
    if { [[ "$ID" == "ubuntu" && "$VERSION_ID" == "20.04" ]] || [[ "$ID" == "debian" && "$VERSION_ID" == "11" ]]; }; then
        sudo apt-get install python3.8 -y >/dev/null 2>&1
        sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.8 1 >/dev/null 2>&1
        sudo update-alternatives --set python3 /usr/bin/python3.8 >/dev/null 2>&1
    elif { [[ "$ID" == "ubuntu" && "$VERSION_ID" == "22.04" ]] || [[ "$ID" == "debian" && "$VERSION_ID" == "12" ]]; }; then
        sudo apt-get install python3.10 -y >/dev/null 2>&1
        sudo update-alternatives --install /usr/bin/python3 python3 /usr/bin/python3.10 1 >/dev/null 2>&1
        sudo update-alternatives --set python3 /usr/bin/python3.10 >/dev/null 2>&1
    else
        echo -e "\033[1;31m[SISTEMA NÃO SUPORTADO] Apenas Ubuntu 20.04, Ubuntu 22.04, Debian 11 e Debian 12 são compatíveis.\033[0m"
        exit 1
    fi
    # INSTALA PIP
    apt install pip -y
    apt install pip3 -y
    apt install python3-pip -y
    # INSTALA SOCAT
    apt install socat -y
}
# Chama a função de instalação do Python3 com barra de progresso
fun_bar "install_python3"

# Redefinir a exibição do terminal
tput reset
# Exibir mensagem de espera com fundo azul e texto branco em negrito
echo -e "\E[38;5;18m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;18m┃\E[44;1;37m            AGUARDE A INSTALAÇÃO               \E[0m\E[38;5;18m┃"
echo -e "\E[38;5;18m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "       \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[1;97mINSTALANDO PACOTES  \033[1;91m[\033[1;31m⚠️ \033[1;91m] \033[0m"
echo ""
echo -e " \033[1;93mALGUNS PACOTES SÃO EXTREMAMENTE NECESSÁRIOS!\033[0m"
echo ""

# Função para instalar pacotes necessários
_pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "python3" "python-pip" "python" "at")
        for _prog in ${_pacotes[@]}; do
            apt install $_prog -y
        done
  # Instalando o Speedtest-CLI
    pip3 install speedtest-cli
        
  # instalando rustyproxy by @UlekBR
      bash <(wget -qO- https://raw.githubusercontent.com/PhoenixxZ2023/RustyProxyOnly/refs/heads/main/install.sh)

  # Instalando checkuser multi-apps by @UlekBR
      wget -qO /bin/checkuser https://raw.githubusercontent.com/PhoenixxZ2023/NEW-SSHPLUS/main/checkuser
      chmod +x /bin/checkuser
}
fun_bar 'inst_pct'

# Verificar firewall ativo
if systemctl is-active --quiet firewalld && command -v firewall-cmd &>/dev/null; then
  FIREWALL="firewalld"
elif command -v ufw &>/dev/null && ufw status >/dev/null 2>&1; then
  FIREWALL="ufw"
else
  echo "Nenhum firewall ativo (firewalld ou ufw)."
  exit 1
fi

echo "Configurando $FIREWALL..."

# Configurar firewalld
if [ "$FIREWALL" = "firewalld" ]; then
  portas_firewalld=(80 81 443 2053 1194 8080 8443 5454 8888)
  for porta in "${portas_firewalld[@]}"; do
    sudo firewall-cmd --zone=public --permanent --add-port="${porta}/tcp"
  done
  sudo firewall-cmd --zone=public --permanent --add-port=7300/udp
  sudo firewall-cmd --reload
  echo "Regras do firewalld configuradas."
  sudo firewall-cmd --list-all --zone=public

# Configurar ufw
elif [ "$FIREWALL" = "ufw" ]; then
  portas_ufw=(80 443 2053 5454 8443 8799 8080 1194)
  for porta in "${portas_ufw[@]}"; do
    sudo ufw allow "${porta}/tcp"
  done
  echo "Regras do ufw configuradas."
  sudo ufw status
fi

# Redefinir a exibição do terminal novamente
tput reset
# Instala ferramentas de rede
echo -e "\E[38;5;18m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;18m┃\E[44;1;37m         INSTALANDO PACOTES DE REDE          \E[0m\E[38;5;18m┃"
echo -e "\E[38;5;18m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
inst_pack_rede() {
fun_bar "sudo apt-get install -y lsof >/dev/null 2>&1"
fun_bar "sudo apt-get install -y htop >/dev/null 2>&1"
fun_bar "sudo apt-get install -y nload >/dev/null 2>&1"
fun_bar "sudo apt-get install -y zip >/dev/null 2>&1"
fun_bar "sudo apt-get install -y netcat >/dev/null 2>&1"
fun_bar "sudo apt install -y fail2ban >/dev/null 2>&1"
fun_bar "sudo systemctl start fail2ban >/dev/null 2>&1"
fun_bar "sudo systemctl enable fail2ban >/dev/null 2>&1"
fun_bar "sudo apt install lolcat figlet -y >/dev/null 2>&1"
}
fun_bar "inst_pack_rede"

# Redefinir a exibição do terminal
tput reset
# Exibir a mensagem de finalização
echo -e "\E[38;5;18m╭━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╮\033[0m"
echo -e "\E[38;5;18m┃\E[44;1;37m         FINALIZANDO INSTALAÇÃO          \E[0m\E[38;5;18m┃"
echo -e "\E[38;5;18m╰━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╯\033[0m"
echo ""
echo -e "     \033[1;93mCONCLUINDO FUNÇÕES E DEFINIÇÕES! \033[0m"
echo ""
clear
echo ""
cd $HOME
echo ""
echo -e "\033[1;33m • \033[1;32m🚀 INSTALAÇÃO CONCLUÍDA! BEM-VINDO AO NEW-SSHPLUS 🎉 \033[1;33m • \033[0m"
echo ""
cd $HOME
echo "clear" >>/root/.bashrc
echo 'DATE=$(date +"%d-%m-%y")' >>/root/.bashrc
echo 'TIME=$(date +"%T")' >>/root/.bashrc
echo 'toilet -f smblock -F metal      "NEW SSHPLUS 2025"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;34m💻 NOME DO SERVIDOR : $HOSTNAME\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;34m⚙️  SERVIDOR LIGADO À : $(uptime -p)\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;34m📅 DATA : $(date +%d/%m/%Y)\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;34m⏰ HORA : $(date +%H:%M:%S)\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;34m📲 TELEGRAM OFICIAL: @TURBONET2023\033[0m"' >>/root/.bashrc
echo 'echo -e "\033[01;31m\033[1;34m📝 DIGITE ( menu ) PARA ENTRAR\033[0m"' >>/root/.bashrc
echo 'echo -e ""' >>/root/.bashrc
date=$(date "+%Y-%m-%d <> %H:%M:%S")
echo -e "\033[1;33m $system         $date"
echo ""
toilet -f smblock -F metal     "NEW SSHPLUS 2025"
echo ""
echo -e "\033[01;31m\033[1;33m🚀 PARA INICIAR DIGITE: \033[1;32mmenu\033[0m"
echo -e "\033[01;31m\033[1;33m📢 MAIS INFORMAÇÕES: \033[1;31m(\033[1;36mTELEGRAM\033[1;31m) 👉 \033[1;37m@TURBONET2023\033[0m"
rm $HOME/Plus && cat /dev/null > ~/.bash_history && history -c
